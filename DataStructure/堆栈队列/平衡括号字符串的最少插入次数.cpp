/*
给你一个括号字符串 s ，它只包含字符 '(' 和 ')' 。一个括号字符串被称为平衡的当它满足：

    任何左括号 '(' 必须对应两个连续的右括号 '))' 。
    左括号 '(' 必须在对应的连续两个右括号 '))' 之前。
比方说 "())"， "())(())))" 和 "(())())))" 都是平衡的， 
    ")()"， "()))" 和 "(()))" 都是不平衡的。

你可以在任意位置插入字符 '(' 和 ')' 使字符串平衡。

请你返回让 s 平衡的最少插入次数。
*/

#include<bits/stdc++.h>
using namespace std;

int minInsertions(string s) {
    int res = 0, needR = 0; 
    for(char c: s){
        if(c=='('){
            // 对右括号的需求 +2
            needR+=2;
            // 对右括号的需求为奇数个
            if(needR%2==1){
                // 需要插入 1 个右括号
                res++;
                // 对右括号的需求 -1
                needR--;
            }
        }else{
            needR--;
            // 现在的右括号多一个
            if(needR==-1){
                // 添加一个左括号
                res++;
                // 对右括号的需求 =1 
                needR=1;
            }
        }
    }
    return needR + res;
}