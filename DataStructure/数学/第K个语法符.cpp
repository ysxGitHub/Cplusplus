/*
我们构建了一个包含 n 行( 索引从 1  开始 )的表。首先在第一行我们写上一个 0。接下来的每一行，将前一行中的0替换为01，1替换为10。

例如，对于 n = 3 ，第 1 行是 0 ，第 2 行是 01 ，第3行是 0110 。
给定行数 n 和序数 k，返回第 n 行中第 k 个字符。（ k 从索引 1 开始）
*/

int kthGrammar(int n, int k) {
    if(n==1 && k==1)
        return 0;
    int a=kthGrammar(n-1,(k+1)/2);  //求父结点的值；(K+1)/2为父结点的序号
    int b=-(a-1);   //若a=0则b=1,若a=1则b=0
    if(k%2==1)
        return a;   //K为奇数则其值与父结点相同
    else
        return b;
}

//附图
//序号
//              1
//          /        \   
//      1                2
//    /   \            /    \
//  1       2        3       4
// / \     /  \     /  \    / \ 
//1   2   3    4   5    6  7   8

//01排列
//              0
//          /        \   
//      0                1
//    /   \            /    \
//  0       1        1       0
// / \     /  \     /  \    / \ 
//0   1   1    0   1    0  0   1