#include<vector>
#include<iostream>
#include<algorithm>

using namespace std;


void bucketSort(vector<int>& arr){

    // 计算最大值与最小值
    int max32 = INT32_MIN;
    int min32 = INT32_MAX;

    for(int i = 0; i < arr.size(); i++){
        max32 = max(max32, arr[i]);
        min32 = min(min32, arr[i]);
    }

    // 计算桶的数量
    int bucketNum = (max32 - min32) / arr.size() + 1;
    vector<vector<int>> bucketArr(bucketNum);

    // 将每个元素放入桶
    for(int i = 0; i < arr.size(); i++){
        int num = (arr[i] - min32) / (arr.size());
        bucketArr[num].emplace_back(arr[i]);
    }

    // 对每个桶进行排序
    for(int i = 0; i < bucketArr.size(); i++){
        sort(bucketArr[i].begin(), bucketArr[i].end());
    }

    // 将桶中的元素赋值到原序列
	int index = 0;
	for(int i = 0; i < bucketArr.size(); i++){
		for(int j = 0; j < bucketArr[i].size(); j++){
			arr[index++] = bucketArr[i][j];
		}
	}
}

int main(int argc, char const *argv[])
{
    vector<int>nums={20931212,514296171,418624802,521827410,713610803,785666644,53243977,27971816,699208170,37639503,441246056,881758333,457330452,582902386,861963933,416326704,882593245,78698769,440172416,434586927,869673606,652889930,731884257,529441264,311777459,161188959,20377472,644865829,870258130,172496408,315058247,501948728,109107979,482109421,444705722,500544824,384926877,842216195,809934277,761278197,204159338,901331991,954522798,265883604,656934763,977546695,481810121,557903616,541595938,832307520,203304669,509333144,339501876,490864329,618259971,128521729,670537475,239006770,666943231,241839130,855632236,943981462,417366307,167706079,811933708,238764154,312412742,683545151,175564371,252356289,601809370,236205976,455159078,476533781,340250003,129901925,830020238,120467674,688205153,130541209,477515046,21040495,928690984,136918050,888711109,694559728,127452082,311090940,767398996,465969295,421587038,831851536,53383655,659897488,721306458,382905524,544275223,651778352,176967013,398720884,8445519};
    bucketSort(nums);
    for(auto&num: nums){
        cout<<num<<", ";
    }
    return 0;
}
